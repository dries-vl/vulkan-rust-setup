# this line needs to come before anything else in Cargo.toml to use cranelift
cargo-features = ["codegen-backend"]

[package]
name = "vulkan-rust-hud"
version = "0.1.0"
edition = "2021"

[dependencies]
# Vulkan
ash = { version = "0.38.0+1.3.281", default-features = false, features = ["linked", "debug", "std"] }
ash-window = "0.13.0"
# Windows
windows-sys = { version = "0.59.0", features = ["Win32_Graphics", "Win32_Graphics_Gdi", "Win32_System_LibraryLoader", "Win32_UI", "Win32_UI_WindowsAndMessaging"] }
raw-window-handle = "0.6.2"
widestring = "1.1.0"



# BUILD SETTINGS
[profile.dev]
codegen-backend = "cranelift"
opt-level = 0     # z is for smallest possible binary including no loop vectorization, 3 is most speed, 0 for faster compilation
codegen-units = 256  # maximum parallel code generation
incremental = true   # enable incremental compilation
lto = false         # disable link-time optimization
[profile.release]
panic = "abort"     # abort immediately rather than unwind, removes need for extra unwinding code; smaller binary
strip = true   # remove symbols from binary; smaller binary
opt-level = 'z'     # z is for smallest possible binary including no loop vectorization, 3 is most speed, 0 for faster compilation
codegen-units = 1   # Reduce Parallel Code Generation Units to Increase Optimization
lto = true          # longer compile time, more optimization
incremental = false # recompile fully to ensure optimizations
debug = false       # No debug info
[profile.release.build-override]
opt-level = 'z'
codegen-units = 1
strip = true
[profile.release.package."*"]
opt-level = 'z'
strip = true
codegen-units = 1
[profile.dev.build-override]
opt-level = 0
codegen-units = 256
